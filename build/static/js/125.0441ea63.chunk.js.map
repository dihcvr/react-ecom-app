{"version":3,"sources":["views/ecom/orders/edit/EditCard.js","views/ecom/orders/edit/index.js","@core/components/sidebar/index.js","@core/components/repeater/index.js","views/ecom/orders/shared-sidebar/SidebarSendInvoice.js"],"names":["InvoiceEditCard","data","products","useState","history","length","count","setCount","useForm","register","handleSubmit","errors","alertvisible","setalertvisible","total","idsProducts","price","qte","status","setStatus","prod","setProd","Date","createdAt","picker","setPicker","useEffect","parseJwt","token","base64","split","replace","JSON","parse","window","atob","className","Alert","color","Row","Col","xl","md","sm","Card","CardBody","lg","clientId","fullname","CardText","phone","city","adr","InputGroup","InputGroupAddon","addonType","InputGroupText","size","FormGroup","Input","value","_id","placeholder","disabled","name","innerRef","required","validate","onChange","date","i","Tag","SlideDown","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","e","newstate","slice","Object","entries","map","k","v","parseInt","idProd","label","id","min","max","currency","type","Button","Ripple","onClick","push","Label","for","rows","note","tag","Link","to","block","idsProds","t","obj","idUser","getAuthToken","console","log","link","axios","patch","headers","Authorization","then","response","catch","err","CustomInput","defaultChecked","target","InvoiceEdit","useParams","setData","prd","setPrd","get","undefined","EditCard","Sidebar","props","width","open","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","title","children","closeBtn","rest","renderCloseBtn","isOpen","toggle","classnames","modalClassName","style","String","close","Repeater","component","items","defaultProps"],"mappings":"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","file":"static/js/125.0441ea63.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\n\n// ** Third Party Components\nimport {\n  Card,\n  CardBody,\n  CardText,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  UncontrolledTooltip,\n  FormGroup,\n  Label,\n  Button, \n  CustomInput,\n  Form,\n  Alert,\n  Spinner\n} from 'reactstrap'\nimport Flatpickr from 'react-flatpickr'\nimport Repeater from '@components/repeater'\nimport { SlideDown } from 'react-slidedown'\nimport { X, Plus, Hash } from 'react-feather'\nimport Select from 'react-select'\n\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom' \n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { selectThemeColors, getAuthToken } from '@utils'\nimport axios from 'axios'\nimport NumberInput from '@components/number-input'\nconst InvoiceEditCard = ({ data, products }) => {\n  // ** States\n  const [count, setCount] = useState(data.history.length)\n\n  const { register, errors, handleSubmit } = useForm()\n  //\n  const [alertvisible, setalertvisible] = useState(false)\n\n  const [total, setTotal] = useState(data.total)\n  const [price, setPrice] = useState(data.idsProducts[0] ? data.idsProducts[0].price : 0)\n  const [qte, setQte] = useState(data.history[0].qte ? data.history[0].qte : 0)\n \n  const [status, setStatus] = useState(data.status)\n\n  const [prod, setProd] = useState(data.history)\n  const [picker, setPicker] = useState(new Date(data.createdAt))\n  const [dueDatepicker, setDueDatePicker] = useState(new Date(data.createdAt))\n\n  useEffect(() => {\n    // ** Get Clients\n//   console.log(prod)\n    })\n\n  // ** Deletes form\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('.repeater-wrapper').remove()\n  }\n\n  const handleStatus = e => {\n    e.preventDefault()\n    console.log(e.target.value)\n  }\n\n    const parseJwt = (token) => {\n      if (!token) { return }\n      const base64Url = token.split('.')[1]\n      const base64 = base64Url.replace('-', '+').replace('_', '/')\n      return JSON.parse(window.atob(base64))\n  }\n  const updateTotal = e => {\n   // \n    let t = 0\n    \n    prod.map(e => {\n      t = t + (e.qte * e.price)\n    })\n    setTotal(t)\n    console.log(t)\n    \n  }\n  const onSubmit = () => {\n    // console.log(parseJwt(JSON.parse(getAuthToken())).id)\n    //console.log(prod)\n    const idsProds = []\n    let t = 0\n    prod.map(e => {\n      idsProds.push(e.idProd)\n      t = t + (e.qte * e.price)\n    })\n    const obj = {\n      clientId : data.clientId._id,\n      idUser : parseJwt(JSON.parse(getAuthToken())).id,\n      idsProducts : idsProds,\n      total : t,\n      status,\n      history : prod\n    }\n    \n   console.log(total)\n    \n    const link = `http://68.183.222.133:5000/orders/update/${data._id}`\n    \n    axios.patch(link, obj,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('-----')\n      console.log(response.data)\n      setalertvisible(true)\n     \n    })\n    .catch(err => console.log(err))\n    \n  }\n  return (\n    \n    <div className='invoice-edit-wrapper'>\n      {\n      alertvisible ? <Alert color='success'>\n      <h4 className='alert-heading'>Succès</h4>\n      <div className='alert-body'>\n      Mises à jour effectuées avec succès\n      </div>\n    </Alert> : '' \n      }\n      <Row className='invoice-edit'>\n        <Col xl={9} md={8} sm={12}>\n          <Card className='invoice-preview-card mb-0'>\n            {/* Header */}\n            <CardBody className='invoice-padding pb-0'>\n              <div className='d-flex justify-content-between flex-md-row flex-column invoice-spacing mt-0'>\n                <div>\n                  \n                  <Col className='p-0' lg='20'>\n                  <h6 className='mb-2'>Commande de:</h6>\n                  <h6 className='mb-25'>{data.clientId.fullname}</h6>\n                  <CardText className='mb-25'>{data.clientId.phone}</CardText>\n                  <CardText className='mb-25'>{data.clientId.city}</CardText>\n                  <CardText className='mb-25'>{data.clientId.adr}</CardText>\n                </Col>\n                </div>\n                <div className='invoice-number-date mt-md-0 mt-2'>\n                  <div className='d-flex align-items-center justify-content-md-end mb-1'>\n                    <h4 className='invoice-title'>Invoice</h4>\n                    <InputGroup className='input-group-merge invoice-edit-input-group disabled'>\n                      <InputGroupAddon addonType='prepend'>\n                        <InputGroupText>\n                          <Hash size={15} />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <FormGroup>\n                      <Input\n                        className='invoice-edit-input'\n                        value={data._id}\n                        placeholder='53634'\n                        disabled        \n                        name='id'\n                        innerRef={register({ required: true, validate: value => value !== '' })}\n                      /></FormGroup>\n                    </InputGroup>\n                  </div>\n                  <div className='d-flex align-items-center mb-1'>\n                    <span className='title'>Date:</span>\n                    <Flatpickr\n                      value={picker}\n                      disabled\n                      name='date'\n                      onChange={date => setPicker(date)}\n                      className='form-control invoice-edit-input date-picker'\n                      innerRef={register({ required: true, validate: value => value !== '' })}\n                    />\n                  </div>\n                \n                </div>\n              </div>\n            </CardBody>\n            {/* /Header */}\n\n            <hr className='invoice-spacing' />\n\n\n            {/* Product Details */}\n            <CardBody className='invoice-padding invoice-product-details'>\n            <Repeater count={count}>\n            {i => {\n              const Tag = i === 0 ? 'div' : SlideDown\n              return (\n                <Tag key={i} className='repeater-wrapper'>\n                \n                      <Row>\n                        <Col className='d-flex product-details-border position-relative pr-0' sm='12'>\n                          <Row className='w-100 pr-lg-0 pr-1 py-2'>\n                            <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2' lg='5' sm='12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Produit</CardText>\n                            \n                              <FormGroup>\n                              <Select\n                                theme={selectThemeColors}\n                                className='react-select'\n                                classNamePrefix='select'\n                                defaultValue={data.idsProducts[i] ? data.idsProducts[i] : data.idsProducts[0]}\n                                options={products}\n                                isClearable={false}\n                                name={`prd-${i}`}\n                                innerRef={register({ required: true, validate: value => value !== '' })}\n                                       \n                                onChange={(e) => {\n                                  const newstate = prod.slice() //copy the array\n                                \n                                  Object.entries(prod).map(([k, v]) => {\n                                    if (parseInt(k) === parseInt(i)) {\n                                      newstate[k] = {...v, idProd: e._id, price: e.price, name: e.label}\n                                    }\n                                  })\n                                  setProd(newstate)\n                                  /*\n                                  setProd(prod.map(obj => {\n                                    console.log('rrrr')\n                                    return {...obj, idProd: e._id, price: e.price, name: e.label}\n                                  }))\n                                  console.log(prod)\n                                  /*\n                                  setProd()\n                                  console.log(data.history[i])\n                                  \n                                 setProd(e)\n                                  setPrice(e.price)\n                                  setTotal(qte * e.price)\n                                  */\n                                }}\n                              /></FormGroup>\n                              </Col>\n                            <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                              <CardText className='col-title mb-md-2 mb-0'>Qte</CardText>\n\n        <NumberInput id='min-max-number-input'  size='sm'  min={1} max={100000000}  \n\n                      value={prod[i] ? prod[i].qte : 1}\n                      onChange={(e) => {\n                                      //  console.log(i)\n                                      //  console.log(prod)\n                                        const newstate = prod.slice() //copy the array\n                                       \n                                       // const ts = []\n                                       const map = Object.entries(prod).map(([k, v]) => {\n                                          if (parseInt(k) === parseInt(i)) {\n                                            newstate[k] = {...v, qte: parseInt(e)}\n                                            \n                                          }\n                                        })\n                                        \n                                  //setTotal(t)\n                                        setProd(newstate)\n//  const map = {a: 1, b: 2, c: 3}\n                                        /*\nconst mapped = Object.entries(map).map(([k, v]) => console.log(`${k}_${v}`))\nconsole.log(mapped)\n                                        /*\n                                        setProd(prod.map(([k, v]) => {\n                                          console.log(k, '-', v)\n                                          //return {...obj, qte: parseInt(e)}\n                                        }))\n                                        console.log(prod)\n                                        /*\n                                        console.log(e.target.value)\n                                        setQte(e.target.value)\n                                        setTotal(e.target.value * price)\n                                        */\n                                      }}/>\n                              \n                            </Col>\n                            <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Prix ({data.currency})</CardText>\n                              <Input type='number' value={prod[i] ? prod[i].price : 0}\n                             placeholder='0' \n                              name={`price-${i}`}\n                              innerRef={register({ required: false, validate: value => value !== '' })}\n                                      disabled\n                                />\n                              \n                            </Col>\n                            <Col className='my-lg-0 my-2' lg='3' sm='12'>\n                              <CardText className='col-title mb-md-2 mb-0'>Total  </CardText>\n                              <Input type='number' value={prod[i] ? prod[i].qte * prod[i].price : 0} \n                              \n                              disabled placeholder='24' />\n                            </Col>\n                          </Row>\n                        \n                        </Col>\n                      </Row>\n                      </Tag>\n              )\n            }}\n          </Repeater>\n\n          <Row className='mt-1'>\n            <Col sm='12' className='px-0'>\n              <Button.Ripple color='primary' size='sm' className='btn-add-new' \n              onClick={() => {\n                setCount(count + 1)\n                delete data.history[0]._id\n                prod.push(data.history[0])\n                prod.total = prod.total + (prod[0].qte * prod[0].price)\n                /*\n                prod.push({\n                  \"idProd\":products[0]._id,\n                  \"name\":products[0].name,\n                  \"qte\":3,\n                  \"price\":200\n                })\n                */\n              }}>\n                <Plus size={14} className='mr-25'></Plus>\n                <span className='align-middle'>ajouter un item</span>\n              </Button.Ripple>\n            </Col>\n          </Row>\n\n            </CardBody>\n            {/* /Product Details */}\n          \n\n            <hr className='invoice-spacing mt-0' />\n\n            {/* Invoice Note */}\n            <CardBody className='invoice-padding py-0'>\n              <Row>\n                <Col>\n                  <FormGroup className='mb-2'>\n                    <Label for='note' className='form-label font-weight-bold'>\n                      Note:\n                    </Label>\n                    <Input type='textarea' rows='2' id='note' defaultValue={data.note} />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </CardBody>\n            {/* /Invoice Note */}\n          </Card>\n        </Col>\n        <Col xl={3} md={4} sm={12}>\n        <Fragment>\n      <Card className='invoice-action-wrapper'>\n        <CardBody>\n         \n          <Button.Ripple tag={Link} to='/orders/list' color='primary' block  className='mb-75'>\n          Retour à la liste\n          </Button.Ripple>\n          <Button.Ripple color='success' block  className='mb-75' type='submit' onClick={handleSubmit(onSubmit)}>\n          Sauvegarder\n          </Button.Ripple>\n        </CardBody>\n      </Card>\n      <Card className='invoice-action-wrapper'>\n      <CardBody>\n\n      <h6 className='mb-2'>Status</h6>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status1' \n                name='status' \n                label='Confirmée' \n                className='custom-control-success'\n                value={'Confirmée'}\n                defaultChecked={data.status === 'Confirmée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status2' \n                name='status' \n                label='Sans réponse' \n                className='custom-control-danger'\n                value={'SansRéponse'} \n                defaultChecked={data.status === 'Sans réponse'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status3' \n                name='status' \n                label='Reportée' \n                className='custom-control-primary'\n                value={'Reportée'}\n                defaultChecked={data.status === 'Reportée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status7' \n                name='status' \n                label='Injoignable' \n                className='custom-control-secondary'\n                value={'Injoignable'}\n                defaultChecked={data.status === 'Injoignable'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div><div>\n              <CustomInput \n                type='radio' \n                id='status4' \n                name='status' \n                label='Refusée' \n                className='custom-control-warning'\n                value={'Refusée'}\n                defaultChecked={data.status === 'Refusée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div><div>\n              <CustomInput \n                type='radio' \n                id='status5' \n                name='status' \n                label='Annulée' \n                className='custom-control-danger'\n                value={'Annulée'}\n                defaultChecked={data.status === 'Annulée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status6' \n                name='status' \n                label='Livrée' \n                className='custom-control-success'\n                value={'Livrée'}\n                defaultChecked={data.status === 'Livrée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n              \n           </CardBody>\n      </Card>\n      \n    </Fragment>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default InvoiceEditCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\nimport {getAuthToken} from '@utils'\n// ** Third Party Components\nimport axios from 'axios'\nimport { Alert, Row, Col } from 'reactstrap'\n\n// ** Invoice Edit Components\nimport EditCard from './EditCard'\nimport EditActions from './EditActions'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment'\n\nconst InvoiceEdit = () => {\n  // ** Vars\n  const { id } = useParams()\n\n  // ** States\n  const [data, setData] = useState(null)\n  const [prd, setPrd] = useState(null)\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false)\n\n  // ** Functions to toggle add & send sidebar\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen)\n\n  // ** Get invoice on mount based on id\n  useEffect(() => {\n    axios.get(`http://68.183.222.133:5000/products/`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('____prds___')\n      console.log(response.data)\n      setPrd(response.data)\n    })\n    axios.get(`http://68.183.222.133:5000/orders/${id}`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('____order___')\n      console.log(response.data)\n      setData(response.data)\n    })\n  }, [])\n\n  return data !== null && data !== undefined ? (\n          <EditCard data={data} products={prd} />\n       \n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Invoice not found</h4>\n      <div className='alert-body'>\n        Invoice with id: {id} doesn't exist. Check list of all invoices: <Link to='/invoice/list'>Invoice List</Link>\n      </div>\n    </Alert>\n  )\n}\n\nexport default InvoiceEdit\n","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames({\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <ModalBody\n        className={classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        })}\n      >\n        {children}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n","// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Third Party Components\nimport { Link } from 'react-feather'\nimport { Form, FormGroup, Input, Label, Badge, Button } from 'reactstrap'\n\nconst SidebarSendInvoice = ({ open, toggleSidebar }) => {\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='Send Invoice'\n      headerClassName='mb-1'\n      contentClassName='p-0'\n      bodyClassName='pb-sm-0 pb-3'\n      toggleSidebar={toggleSidebar}\n    >\n      <Form>\n        <FormGroup>\n          <Label for='invoice-from' className='form-label'>\n            From\n          </Label>\n          <Input id='invoice-from' defaultValue='shelbyComapny@email.com' placeholder='company@email.com' />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-to' className='form-label'>\n            To\n          </Label>\n          <Input id='invoice-to' defaultValue='qConsolidated@email.com' placeholder='company@email.com' />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-subject' className='form-label'>\n            Subject\n          </Label>\n          <Input\n            id='invoice-subject'\n            defaultValue='Invoice of purchased Admin Templates'\n            placeholder='Invoice regarding goods'\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-message' className='form-label'>\n            Message\n          </Label>\n          <Input\n            type='textarea'\n            cols='3'\n            rows='11'\n            id='invoice-message'\n            defaultValue={`Dear Queen Consolidated,\n\nThank you for your business, always a pleasure to work with you!\n\nWe have generated a new invoice in the amount of $95.59\n\nWe would appreciate payment of this invoice by 05/11/2019`}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Badge color='light-primary'>\n            <Link className='mr-50' size={14} />\n            <span className='align-middle'>Invoice Attached</span>\n          </Badge>\n        </FormGroup>\n        <FormGroup className='d-flex flex-wrap mt-2'>\n          <Button className='mr-1' color='primary' onClick={toggleSidebar}>\n            Send\n          </Button>\n          <Button color='secondary' outline onClick={toggleSidebar}>\n            Cancel\n          </Button>\n        </FormGroup>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarSendInvoice\n"],"sourceRoot":""}