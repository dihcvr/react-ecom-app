{"version":3,"sources":["views/ecom/orders/preorders/data.js","views/ecom/orders/store/actions/index.js","views/ecom/orders/list/columns.js","views/ecom/orders/preorders/TableExpandable.js","views/ecom/orders/preorders/index.js","views/ecom/orders/list/index.js","@core/components/breadcrumbs/index.js"],"names":["data","getData","p","dispatch","axios","get","headers","Authorization","JSON","parse","getAuthToken","params","then","response","console","log","type","orders","totalPages","total","catch","error","status","localStorage","removeItem","Send","CheckCircle","Save","ArrowDownCircle","Info","PieChart","Livrée","title","color","Confirmée","Annulée","Refusée","SansRéponse","Injoignable","Reportée","renderClient","row","Math","floor","random","avatar","className","img","width","height","content","clientId","fullname","initials","columns","name","minWidth","selector","sortable","cell","email","phone","adr","city","Badge","pill","formatDate","updatedAt","to","_id","id","size","UncontrolledTooltip","placement","target","err","domaine","pathname","state","order","ExpandableTable","DataTableWithButtons","useState","newData","setnewData","useEffect","Card","CardHeader","CardTitle","tag","Button","onClick","noHeader","expandableRows","expandOnRowClicked","sortIcon","expandableRowsComponent","Tables","Row","Col","sm","TableExpandable","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","lg","Label","for","CustomInput","onChange","Input","e","placeholder","InvoiceList","props","useDispatch","store","useSelector","invoice","setValue","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","process","page","perPage","q","length","pagination","paginationServer","subHeader","responsive","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","toFixed","pageCount","nextLabel","breakLabel","previousLabel","activeClassName","breakClassName","breakLinkClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","active","right","Link"],"mappings":"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","file":"static/js/134.fc2e64f7.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { Fragment } from 'react'\n\nimport { formatDate, getAuthToken } from '@utils'\n// ** Third Party Components\nimport axios from 'axios'\nimport { MoreVertical, Edit, FileText, Archive, Trash, Link2, Eye, ArrowRightCircle } from 'react-feather'\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledTooltip, Button } from 'reactstrap'\n\nimport { Link } from 'react-router-dom'\n// ** Vars\nconst states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary']\n\nconst status = {\n  Livrée: { title: 'Livrée', color: 'light-primary' },\n  Confirmée: { title: 'Confirmée', color: 'light-success' },\n  Annulée: { title: 'Annulée', color: 'light-danger' },\n  Refusée: { title: 'Refusée', color: 'light-warning' },\n  SansRéponse: { title: 'Sans réponse', color: 'light-info' },\n  Injoignable: { title: 'Injoignable', color: 'light-danger' },\n  Reportée: { title: 'Reportée', color: 'light-danger' }\n  \n}\n\nexport let data\n\n// ** Get initial Data\naxios.get('http://68.183.222.133:5000/preorders/get/byuser',\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('-8888----')\n      console.log(response.data)\n      data = response.data\n    })\n    .catch(err => console.log(err))\n\n// ** Table Zero Config Column\nexport const basicColumns = [\n  {\n    name: 'ID',\n    selector: 'id',\n    sortable: true,\n    maxWidth: '100px'\n  },\n  {\n    name: 'Name',\n    selector: 'full_name',\n    sortable: true,\n    minWidth: '225px'\n  },\n  {\n    name: 'Email',\n    selector: 'email',\n    sortable: true,\n    minWidth: '310px'\n  },\n  {\n    name: 'Position',\n    selector: 'post',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Age',\n    selector: 'age',\n    sortable: true,\n    minWidth: '100px'\n  },\n  {\n    name: 'Salary',\n    selector: 'salary',\n    sortable: true,\n    minWidth: '175px'\n  }\n]\n\n// ** Expandable table component\nconst ExpandableTable = ({ data }) => {\n  return (\n    <div className='expandable-content p-2'>\n     {/*\n      <p>\n        <span className='font-weight-bold'>City:</span> {data.city}\n      </p>\n      <p>\n        <span className='font-weight-bold'>Experience:</span> {data.experience}\n      </p>\n      <p className='m-0'>\n        <span className='font-weight-bold'>Post:</span> {data.post}\n      </p>\n  */}\n    </div>\n  )\n}\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-50' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color} className='mr-50' content={row ? row.fullname : 'John loe'} initials />\n  }\n}\n// ** Table Common Column\nexport const columns = [\n  \n  /*\n  {\n    \n    name: '#',\n    minWidth: '107px',\n    selector: 'id',\n    cell: row => <Link to={`/apps/invoice/preview/${row._id}`}>{`#${row._id}`}</Link>\n  ,*/\n  {\n    name: 'Client',\n    minWidth: '200px',\n    selector: 'client',\n    sortable: true,\n    cell: row => {\n      const name = row ? row.fullname : 'John Doe',\n        email = row ? row.phone : 'johnDoe@email.com'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          {renderClient(row)}\n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{name}</h6>\n            <small className='text-truncate text-muted mb-0'>{email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Adresse',\n    minWidth: '300px',\n    selector: 'adr',\n    sortable: true,\n    cell: row => {\n      const adr = row ? row.adr : '@adresse',\n        city = row ? row.city : 'ville'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          \n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{adr}</h6>\n            <small className='text-truncate text-muted mb-0'>{city}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Status',\n    minWidth: '90px',\n    selector: 'invoiceStatus',\n    sortable: true,\n    cell: row => {\n      return (\n        <Badge color='light-secondary' pill>\n          En attente\n        </Badge>\n      )\n    }\n  },\n  \n  {/*\n    name: 'Landing Page',\n    minWidth: '102px',\n    selector: 'invoiceStatus',\n    sortable: true,\n    cell: row => {\n     return (\n        <Fragment onClick={() => console.log('ppp')}>\n          <Avatar color='primary' icon={<Eye size={14} />} id={`av-tooltip-${row.id}`} />\n          <UncontrolledTooltip placement='top' target={`av-tooltip-${row.id}`}>\n            <span className='font-weight-bold'>{row.invoiceStatus}</span>\n            <br />\n            <span className='font-weight-bold'></span> {row.domaine}\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    }\n  */},\n  \n  {\n    name: 'Date',\n    selector: 'dueDate',\n    sortable: true,\n    minWidth: '200px',\n    cell: row => formatDate(row.updatedAt)\n  },\n  {\n    name: 'Action',\n    minWidth: '190px',\n    selector: '',\n    sortable: true,\n    cell: row => {\n      const link = `\"${row.domaine}\"`\n      \n    return (\n      \n      <div className='column-action d-flex align-items-center'>\n       \n   {/*   \n       <Button.Ripple className='btn-icon rounded-circle'  color='flat-primary' \n            onClick={() => {\n              console.log(`\"${row.domaine}\"`)\n            }} \n        >\n        <Eye size={16} color='success' />\n      </Button.Ripple>\n*/}\n        <Link to={{pathname: `/orders/new`, state:{ order: row}}}  id={`pw-tooltip2-${row._id}`}>\n          <ArrowRightCircle  size={17} className='mx-1' />\n        </Link>\n        <UncontrolledTooltip placement='top' target={`pw-tooltip2-${row._id}`}>\n        Activez la commande\n        </UncontrolledTooltip>\n        \n        {/*\n        \n        <UncontrolledDropdown>\n          <DropdownToggle tag='span'>\n            <MoreVertical size={17} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Download size={14} className='mr-50' />\n              <span className='align-middle'>Download</span>\n            </DropdownItem>\n            <DropdownItem tag={Link} to={`/apps/invoice/edit/${row.id}`} className='w-100'>\n              <Edit size={14} className='mr-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteInvoice(row.id))\n              }}\n            >\n              <Trash size={14} className='mr-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Copy size={14} className='mr-50' />\n              <span className='align-middle'>Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        */}\n      </div>\n    )\n  }\n  }\n]\n\n// ** Table Intl Column\nexport const multiLingColumns = [\n  {\n    name: 'Name',\n    selector: 'full_name',\n    sortable: true,\n    minWidth: '200px'\n  },\n  {\n    name: 'Position',\n    selector: 'post',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Email',\n    selector: 'email',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Date',\n    selector: 'start_date',\n    sortable: true,\n    minWidth: '150px'\n  },\n\n  {\n    name: 'Salary',\n    selector: 'salary',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Status',\n    selector: 'status',\n    sortable: true,\n    minWidth: '150px',\n    cell: row => {\n      return (\n        <Badge color={status[row.status].color} pill>\n          {status[row.status].title}\n        </Badge>\n      )\n    }\n  },\n  {\n    name: 'Actions',\n    allowOverflow: true,\n    cell: row => {\n      return (\n        <div className='d-flex'>\n          <UncontrolledDropdown>\n            <DropdownToggle className='pr-1' tag='span'>\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem>\n                <FileText size={15} />\n                <span className='align-middle ml-50'>Details</span>\n              </DropdownItem>\n              <DropdownItem>\n                <Archive size={15} />\n                <span className='align-middle ml-50'>Archive</span>\n              </DropdownItem>\n              <DropdownItem>\n                <Trash size={15} />\n                <span className='align-middle ml-50'>Delete</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <Edit size={15} />\n        </div>\n      )\n    }\n  }\n]\n\n// ** Table Server Side Column\nexport const serverSideColumns = [\n  {\n    name: 'Full Name',\n    selector: 'full_name',\n    sortable: true,\n    minWidth: '225px'\n  },\n  {\n    name: 'Email',\n    selector: 'email',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Position',\n    selector: 'post',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Office',\n    selector: 'city',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Start Date',\n    selector: 'start_date',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Salary',\n    selector: 'salary',\n    sortable: true,\n    minWidth: '150px'\n  }\n]\n\n// ** Table Adv Search Column\nexport const advSearchColumns = [\n  {\n    name: 'Name',\n    selector: 'full_name',\n    sortable: true,\n    minWidth: '200px'\n  },\n  {\n    name: 'Email',\n    selector: 'email',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Post',\n    selector: 'post',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'City',\n    selector: 'city',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Date',\n    selector: 'start_date',\n    sortable: true,\n    minWidth: '150px'\n  },\n\n  {\n    name: 'Salary',\n    selector: 'salary',\n    sortable: true,\n    minWidth: '100px'\n  }\n]\n\nexport default ExpandableTable\n","import axios from 'axios'\nimport {getAuthToken} from '@utils'\n\n//import useJwt from '@src/auth/jwt/useJwt'\nimport { Link, useHistory, Redirect } from 'react-router-dom'\n\n\n// ** Get data\nexport const getData =  (p) => {\n  //console.log('**ooo**')\n // console.log(JSON.parse(getAuthToken()))\n // const  token = await JSON.parse(getAuthToken())\n  return async dispatch => {\n    await axios.get('http://68.183.222.133:5000/orders/',\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      },\n      params: p\n    }\n    ).then(response => {\n      console.log('-----')\n      console.log(response.data)\n      dispatch({\n        type: 'GET_DATA',\n        data: response.data.orders,\n        totalPages: response.data.total,\n        p\n      })\n    })\n    .catch(error => {\n      if (error.response.status === 500) {\n        localStorage.removeItem('userData')\n          localStorage.removeItem('accessToken')\n          localStorage.removeItem('refreshToken') \n      }\n    })\n  }\n}\n\nexport const getSingle = p => {\n  console.log(p)\n  console.log('****')\n  return async dispatch => {\n    await axios.get(`http://68.183.222.133:5000/orders/${p.myid}`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      },\n      params: p\n    }\n    ).then(response => {\n      console.log('-----')\n      console.log(response.data)\n      dispatch({\n        type: 'GET_SINGLE',\n        singleOrder: response.data,\n        p\n      })\n    })\n    .catch(err => console.log(err))\n  }\n}\n\n// ** Delete Invoice\nexport const deleteInvoice = id => {\n  return (dispatch, getStore) => {\n    axios\n      .delete('/apps/invoice/delete', { id })\n      .then(response => {\n        dispatch({\n          type: 'DELETE_INVOICE'\n        })\n      })\n      .then(() => dispatch(getData(getStore().invoice.params)))\n  }\n}\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { formatDate } from '@utils'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { deleteInvoice } from '../store/actions'\nimport { store } from '@store/storeConfig/store'\n\n// ** Third Party Components\nimport {\n  Badge,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  UncontrolledTooltip\n} from 'reactstrap'\nimport {\n  Eye,\n  TrendingUp,\n  Send,\n  MoreVertical,\n  Download,\n  Edit,\n  Trash,\n  Copy,\n  CheckCircle,\n  Save,\n  ArrowDownCircle,\n  Info,\n  PieChart,\n  Link2\n} from 'react-feather'\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: 'light-secondary', icon: Send },\n  Paid: { color: 'light-success', icon: CheckCircle },\n  Draft: { color: 'light-primary', icon: Save },\n  Downloaded: { color: 'light-info', icon: ArrowDownCircle },\n  'Past Due': { color: 'light-danger', icon: Info },\n  'Partial Payment': { color: 'light-warning', icon: PieChart }\n  \n}\nconst status = {\n  Livrée: { title: 'Livrée', color: 'light-primary' },\n  Confirmée: { title: 'Confirmée', color: 'light-success' },\n  Annulée: { title: 'Annulée', color: 'light-danger' },\n  Refusée: { title: 'Refusée', color: 'light-warning' },\n  SansRéponse: { title: 'Sans réponse', color: 'light-info' },\n  Injoignable: { title: 'Injoignable', color: 'light-danger' },\n  Reportée: { title: 'Reportée', color: 'light-danger' }\n  \n}\n/*\nConfirmée\nInjoignable\nSans réponse\nReportée\nRefusée\nAnnulée\nLivrée\n*/\n\n// ** renders client column\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar) {\n    return <Avatar className='mr-50' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color} className='mr-50' content={row.clientId ? row.clientId.fullname : 'John loe'} initials />\n  }\n}\n\n// ** Table columns\nexport const columns = [\n  \n  /*\n  {\n    \n    name: '#',\n    minWidth: '107px',\n    selector: 'id',\n    cell: row => <Link to={`/apps/invoice/preview/${row._id}`}>{`#${row._id}`}</Link>\n  ,*/\n  {\n    name: 'Client',\n    minWidth: '200px',\n    selector: 'client',\n    sortable: true,\n    cell: row => {\n      const name = row.clientId ? row.clientId.fullname : 'John Doe',\n        email = row.clientId ? row.clientId.phone : 'johnDoe@email.com'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          {renderClient(row)}\n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{name}</h6>\n            <small className='text-truncate text-muted mb-0'>{email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Adresse',\n    minWidth: '330px',\n    selector: 'adr',\n    sortable: true,\n    cell: row => {\n      const adr = row.clientId ? row.clientId.adr : '@adresse',\n        city = row.clientId ? row.clientId.city : 'ville'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          \n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{adr}</h6>\n            <small className='text-truncate text-muted mb-0'>{city}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Status',\n    minWidth: '102px',\n    selector: 'invoiceStatus',\n    sortable: true,\n    cell: row => {\n      return (\n        <Badge color={status[row.status].color} pill>\n          {status[row.status].title}\n        </Badge>\n      )\n    }\n  },\n  /*\n  {\n    name: 'Landing Page',\n    minWidth: '102px',\n    selector: 'invoiceStatus',\n    sortable: true,\n    cell: row => {\n      const color = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].color : 'primary',\n        Icon = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].icon : Edit\n      return (\n        <Fragment>\n          <Avatar color={color} icon={<Link2 size={14} />} id={`av-tooltip-${row.id}`} />\n          <UncontrolledTooltip placement='top' target={`av-tooltip-${row.id}`}>\n            <span className='font-weight-bold'>{row.invoiceStatus}</span>\n            <br />\n            <span className='font-weight-bold'></span> {row.idsProducts[0].domaine}\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    }\n  },\n  */\n  {\n    name: 'Date',\n    selector: 'dueDate',\n    sortable: true,\n    minWidth: '220px',\n    cell: row => formatDate(row.updatedAt)\n  },\n  {\n    name: 'Action',\n    minWidth: '110px',\n    selector: '',\n    sortable: true,\n    cell: row => (\n      <div className='column-action d-flex align-items-center'>\n       {/* \n       <Link to={`/apps/invoice/preview/${row.id}`} id={`pw-tooltip1-${row._id}`}>\n          <Eye size={17} className='mx-1' />\n        </Link>\n        <UncontrolledTooltip placement='top' target={`pw-tooltip1-${row._id}`}>\n        Aperçu de la commande\n        </UncontrolledTooltip>\n    */}\n        <Link to={`/orders/edit/${row._id}`} id={`pw-tooltip2-${row._id}`}>\n          <Edit size={17} className='mx-1' />\n        </Link>\n        <UncontrolledTooltip placement='top' target={`pw-tooltip2-${row._id}`}>\n        Modifier de la commande\n        </UncontrolledTooltip>\n        {/*\n        \n        <UncontrolledDropdown>\n          <DropdownToggle tag='span'>\n            <MoreVertical size={17} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Download size={14} className='mr-50' />\n              <span className='align-middle'>Download</span>\n            </DropdownItem>\n            <DropdownItem tag={Link} to={`/apps/invoice/edit/${row.id}`} className='w-100'>\n              <Edit size={14} className='mr-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteInvoice(row.id))\n              }}\n            >\n              <Trash size={14} className='mr-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Copy size={14} className='mr-50' />\n              <span className='align-middle'>Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        */}\n      </div>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Table columns & Expandable Data\nimport ExpandableTable, { data, columns } from './data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { Card, CardHeader, CardTitle, Button } from 'reactstrap'\nimport { formatDate, getAuthToken } from '@utils'\n// ** Third Party Components\nimport axios from 'axios'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, RotateCw } from 'react-feather'\nconst DataTableWithButtons = () => {\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0)\n  const [newData, setnewData] = useState([])\n\n\n  // ** Function to handle filter\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={''}\n      nextLabel={''}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={10}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1'}\n    />\n  )\n  \n    useEffect(() => {\n      console.log(data)\n     \n    //  setnewData(data)\n      \n    }, [])\n    \n    const getPreOrdera = () => {\n      axios.get('http://68.183.222.133:5000/preorders/get/newbyuser',\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('-888558----')\n      console.log(response.data)\n      setnewData([response.data])\n     // window.location.reload(false);\n\n    })\n    .catch(err => console.log(err))\n      console.log(data)\n\n    }\n    \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'></CardTitle>\n        <Button className='ml-2' color='primary' onClick={getPreOrdera} >\n              \n              <RotateCw size={15} />\n              <span className='align-middle ml-50'>Obtenir des commandes en attente</span>\n            </Button>\n      </CardHeader>\n      <DataTable\n        noHeader\n        data={newData}\n        expandableRows\n        columns={columns}\n        expandOnRowClicked\n        className='react-dataTable'\n        sortIcon={<ChevronDown size={10} />}\n        expandableRowsComponent={<ExpandableTable />}\n      />\n    </Card>\n  )\n}\n\nexport default DataTableWithButtons\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Tables\nimport TableExpandable from './TableExpandable'\nimport TableZeroConfig from './TableZeroConfig'\nimport TableWithButtons from './TableWithButtons'\nimport TableMultilingual from './TableMultilingual'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst Tables = () => {\n  return (\n    <Fragment>\n      <Row>\n        \n        <Col sm='12'>\n          <TableExpandable />\n        </Col>\n       \n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Tables\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Table Columns\nimport { columns } from './columns'\nimport PreOrders from '../preorders'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Button, Label, Input, CustomInput, Row, Col, Card } from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst CustomHeader = ({ handleFilter, value, handleStatusValue, statusValue, handlePerPage, rowsPerPage }) => {\n  return (\n     \n      \n    <div className='invoice-list-table-header w-100 py-2'>\n      <Row>\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\n          <div className='d-flex align-items-center mr-2'>\n            <Label for='rows-per-page'>Afficher</Label>\n            <CustomInput\n              className='form-control ml-50 pr-3'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </CustomInput>\n          </div>\n          {\n            /*\n              <Button.Ripple tag={Link} to='/apps/invoice/add' color='primary'>\n                Add Record\n              </Button.Ripple>\n            */\n          }\n          \n        </Col>\n        <Col\n          lg='6'\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pr-lg-1 p-0'\n        >\n          <div className='d-flex align-items-center'>\n            <Label for='search-invoice'>Search</Label>\n            <Input\n              id='search-invoice'\n              className='ml-50 mr-2 w-100'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Invoice'\n            />\n          </div>\n          <Input className='w-auto ' type='select' value={statusValue} onChange={handleStatusValue}>\n            <option value=''>Select Status</option>\n            <option value='Livrée'>Livrée</option>\n            <option value='Confirmée'>Confirmée</option>\n            <option value='Annulée'>Annulée</option>\n            <option value='Refusée'>Refusée</option>\n            <option value='SansRéponse'>Sans réponse</option>\n            <option value='Injoignable'>Injoignable</option>\n            <option value='Reportée'>Reportée</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst InvoiceList = (props) => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  const [value, setValue] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [statusValue, setStatusValue] = useState('')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    console.log(process.env)\n    \n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    ).catch((error) => {\n      console.log('llllll')\n    })\n  }, [dispatch, store.data.length])\n\n  const handleFilter = val => {\n    setValue(val)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: val\n      })\n    )\n  }\n\n  const handlePerPage = e => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: parseInt(e.target.value),\n        status: statusValue,\n        q: value\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleStatusValue = e => {\n    setStatusValue(e.target.value)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: e.target.value,\n        q: value\n      })\n    )\n  }\n\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        pageCount={count || 1}\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        activeClassName='active'\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.data.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <div>\n        <PreOrders />\n      </div>\n      <Card>\n        <div className='invoice-list-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            subHeader={true}\n            columns={columns}\n            responsive={true}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n            paginationDefaultPage={currentPage}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                value={value}\n                statusValue={statusValue}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                handleStatusValue={handleStatusValue}\n              />\n            }\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}