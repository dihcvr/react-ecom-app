{"version":3,"sources":["views/ecom/orders/new/EditCard.js","views/ecom/orders/new/index.js","@core/components/sidebar/index.js","@core/components/repeater/index.js","views/ecom/orders/shared-sidebar/SidebarSendInvoice.js"],"names":["InvoiceEditCard","data","useState","count","setCount","useForm","register","handleSubmit","errors","alertvisible","setalertvisible","_id","idPreorder","note","setNote","products","setProducts","prod","setProd","status","setStatus","Date","createdAt","picker","setPicker","client","setClient","parseJwt","token","base64","split","replace","JSON","parse","window","atob","useEffect","fullname","phone","adr","city","console","log","axios","get","headers","Authorization","getAuthToken","then","response","handleChange","e","Object","keys","forEach","key","target","name","value","className","Alert","color","Row","Col","xl","md","sm","Card","CardBody","lg","FormGroup","row","InputGroup","InputGroupAddon","addonType","InputGroupText","size","Input","type","id","placeholder","defaultValue","innerRef","required","validate","onChange","disabled","date","i","Tag","SlideDown","CardText","theme","selectThemeColors","classNamePrefix","options","isClearable","newstate","slice","entries","map","k","v","parseInt","idProd","price","label","min","max","qte","Button","Ripple","onClick","push","Label","for","rows","tag","Link","to","block","post","idsProds","t","obj","clientId","result","idUser","idsProducts","total","history","link","put","catch","err","CustomInput","defaultChecked","InvoiceEdit","props","useParams","order","location","state","setPrd","undefined","EditCard","Sidebar","width","open","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","title","children","closeBtn","rest","renderCloseBtn","isOpen","toggle","classnames","modalClassName","style","String","close","Repeater","component","items","defaultProps"],"mappings":"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","file":"static/js/126.d22c1885.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, Fragment, useEffect } from 'react'\n\nimport NumberInput from '@components/number-input'\n// ** Third Party Components\nimport {\n  Card,\n  CardBody,\n  CardText,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  UncontrolledTooltip,\n  FormGroup,\n  Label,\n  Button, \n  CustomInput,\n  Form,\n  Alert,\n  Spinner\n} from 'reactstrap'\nimport Flatpickr from 'react-flatpickr'\nimport Repeater from '@components/repeater'\nimport { SlideDown } from 'react-slidedown'\nimport { X, Plus, Hash, User, Mail, Smartphone, Lock, ArrowDown } from 'react-feather'\nimport Select from 'react-select'\n\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom' \n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\nimport { selectThemeColors, getAuthToken } from '@utils'\nimport axios from 'axios'\n\nconst InvoiceEditCard = ({ data }) => {\n  // ** States\n  const [count, setCount] = useState(1)\n\n  const { register, errors, handleSubmit } = useForm()\n  //\n  const [alertvisible, setalertvisible] = useState(false)\n\n  const [idPreorder, setidPreorder] = useState(data._id)\n  const [total, setTotal] = useState(0)\n  const [price, setPrice] = useState(0)\n  const [qte, setQte] = useState(0)\n  const [note, setNote] = useState('')\n  const [products, setProducts] = useState([])\n  const [prod, setProd] = useState([{}])\n\n  const [status, setStatus] = useState('Injoignable')\n\n  const [picker, setPicker] = useState(new Date(data.createdAt))\n  const [dueDatepicker, setDueDatePicker] = useState(new Date(data.createdAt))\n\n\n  const [client, setClient] = useState()\n  // ** Deletes form\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('.repeater-wrapper').remove()\n  }\n\n  const handleStatus = e => {\n    e.preventDefault()\n    console.log(e.target.value)\n  }\n  const parseJwt = (token) => {\n    if (!token) { return }\n    const base64Url = token.split('.')[1]\n    const base64 = base64Url.replace('-', '+').replace('_', '/')\n    return JSON.parse(window.atob(base64))\n}\n  const onSubmit = (data) => {\n    data.idUser = parseJwt(JSON.parse(getAuthToken())).id\n    setClient(data)\n   // console.log(data)\n    \n  }\n  useEffect(() => {\n   const client = {\n    fullname : data.fullname,\n    phone : data.phone,\n    adr : data.adr,\n    city : data.city\n   }\n   setClient(client)\n  console.log(client)\n\n    console.log('products')\n    axios.get(`http://68.183.222.133:5000/products/`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('____prds___')\n      console.log(response.data)\n    //  setProd(response.data[0])\n      setProducts(response.data)\n    })\n    //console.log(products[0])\n   // setProd(products[0])\n  }, [])\n    \n  \n  const onSubmitF = () => {\n   // console.log(client)\n\n  // data.idUser = parseJwt(JSON.parse(getAuthToken())).id\n    axios.post('http://68.183.222.133:5000/clients/new', client,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('---obj--')\n     // console.log(response.data.result._id)\n     const idsProds = []\n    let t = 0\n    prod.map(e => {\n      idsProds.push(e.idProd)\n      t = t + (e.qte * e.price)\n    })\n     const obj = {\n       clientId : response.data.result._id,\n       idUser : parseJwt(JSON.parse(getAuthToken())).id,\n       idsProducts : idsProds,\n       total : t,\n       status,\n       note,\n       history : prod\n     }\n     console.log(obj)\n     \n     axios.post('http://68.183.222.133:5000/orders/new', obj,\n      {\n        headers: {\n          Authorization : JSON.parse(getAuthToken())\n        }\n      }\n      ).then(response => {\n\n    const link = `http://68.183.222.133:5000/preorders/change-status/${idPreorder}`\n    console.log(link)\n    \n        axios.put(link, {},\n          {\n            headers: {\n              Authorization : JSON.parse(getAuthToken())\n            }\n          }\n          ).then(response => {\n            console.log('---status--')\n            console.log(response.data)\n          //  setalertvisible(true)\n          \n          })\n        console.log('---order--')\n        console.log(response.data)\n        setalertvisible(true)\n       \n      })\n      .catch(err => console.log(err))\n     \n    })\n    .catch(err => console.log(err))\n  }\n  const handleChange = (e) => {\n    Object.keys(client).forEach(key => {\n      if (key = e.target.name) {\n        client[key] = e.target.value\n      }\n      \n    })\n    console.log(client)\n  }\n\n  return (\n    <div className='invoice-edit-wrapper'>\n      {\n      alertvisible ? <Alert color='success'>\n      <h4 className='alert-heading'>Succès</h4>\n      <div className='alert-body'>\n        La commande effectuée avec succès\n      </div>\n    </Alert> : '' \n      }\n      \n      <Row className='invoice-edit'>\n        <Col xl={9} md={8} sm={12}>\n          <Card className='invoice-preview-card mb-0'>\n            {/* Header */}\n            <CardBody className='invoice-padding pb-0'>\n              <div className='d-flex justify-content-between flex-md-row flex-column invoice-spacing mt-0'>\n                <div>\n                  \n                  <Col className='p-0' lg='20'>\n                  <h6 className='mb-2'>Commande de:</h6>\n                  \n          <FormGroup row>\n            <Col sm='12'>\n              <InputGroup className='input-group-merge'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <User size={15} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input type='text' name='fullname' id='nameIcons' placeholder='Nom Complet' \n                defaultValue={data.fullname}\n                innerRef={register({ required: true, validate: value => value !== '' })} \n                onChange={(e) => { handleChange(e) }}\n                />\n                \n              </InputGroup>\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm='12'>\n              <InputGroup className='input-group-merge'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <Smartphone size={15} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input type='number' name='phone' id='mobileIcons' placeholder='Telephone' \n                defaultValue={data.phone}\n                innerRef={register({ required: true, validate: value => value !== '' })}\n                onChange={(e) => { handleChange(e) }}/>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm='12'>\n              <InputGroup className='input-group-merge'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <ArrowDown size={15} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input type='text' name='adr' id='adrIcons' placeholder='adresse' \n                defaultValue={data.adr}\n                innerRef={register({ required: true, validate: value => value !== '' })}\n                onChange={(e) => { handleChange(e) }}/>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm='12'>\n              <InputGroup className='input-group-merge'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <ArrowDown size={15} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input type='text' name='city' id='cityIcons' placeholder='ville' \n                defaultValue={data.city}\n                innerRef={register({ required: true, validate: value => value !== '' })}\n                onChange={(e) => { handleChange(e) }}/>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n                </Col>\n                </div>\n                <div className='invoice-number-date mt-md-0 mt-2'>\n                  <div className='d-flex align-items-center justify-content-md-end mb-1'>\n                    <h4 className='invoice-title'>Invoice</h4>\n                    <InputGroup className='input-group-merge invoice-edit-input-group disabled'>\n                      <InputGroupAddon addonType='prepend'>\n                        <InputGroupText>\n                          <Hash size={15} />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        className='invoice-edit-input'\n                        value={data._id}\n                        placeholder='53634'\n                        disabled        \n                        name='id'\n                      />\n                    </InputGroup>\n                  </div>\n                  <div className='d-flex align-items-center mb-1'>\n                    <span className='title'>Date:</span>\n                    <Flatpickr\n                      value={picker}\n                      disabled\n                      name='date'\n                      onChange={date => setPicker(date)}\n                      className='form-control invoice-edit-input date-picker'\n                      innerRef={register({ required: true, validate: value => value !== '' })}\n                    />\n                  </div>\n                \n                </div>\n              </div>\n            </CardBody>\n            {/* /Header */}\n\n            <hr className='invoice-spacing' />\n\n\n            {/* Product Details */}\n            <CardBody className='invoice-padding invoice-product-details'>\n            <Repeater count={count}>\n            {i => {\n              const Tag = i === 0 ? 'div' : SlideDown\n              return (\n                <Tag key={i} className='repeater-wrapper'>\n                \n                \n                      <Row>\n                        <Col className='d-flex product-details-border position-relative pr-0' sm='12'>\n                          <Row className='w-100 pr-lg-0 pr-1 py-2'>\n                            <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2' lg='5' sm='12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Produit</CardText>\n                              \n                              <Select\n                                theme={selectThemeColors}\n                                className='react-select'\n                                classNamePrefix='select'\n                               // defaultValue={prod}\n                                options={products}\n                                isClearable={false}\n                                onChange={(e) => {\n                                  const newstate = prod.slice() //copy the array\n                                \n                                  Object.entries(prod).map(([k, v]) => {\n                                    if (parseInt(k) === parseInt(i)) {\n                                      newstate[k] = {...v, idProd: e._id, price: e.price, name: e.label}\n                                    }\n                                  })\n                                  setProd(newstate)\n                                 // console.log(prod)\n                                  \n                                }}\n                              />\n                              </Col>\n                            <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                              <CardText className='col-title mb-md-2 mb-0'>Qte</CardText>\n                              <NumberInput id='min-max-number-input'  size='sm'  min={0} max={100000000}  \nvalue={0}\n                //value={prod[i] ? prod[i].qte : 1}\n                onChange={(e) => {\n                 \n                  const newstate = prod.slice()\n                 Object.entries(prod).map(([k, v]) => {\n                    if (parseInt(k) === parseInt(i)) {\n                      newstate[k] = {...v, qte: parseInt(e)}\n                      \n                    }\n                  })\n                //  console.log(prod)\n                  setProd(newstate)\n                }}/>\n                            </Col>\n                            <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                              <CardText className='col-title mb-md-50 mb-0'>Prix (MAD)</CardText> \n                              <Input type='number' value={prod[i] ? prod[i].price : 0}\n                             placeholder='0'  name={`price-${i}`}\n                             innerRef={register({ required: false, validate: value => value !== '' })}\n                                   \n                                 disabled\n                                />\n                              \n                            </Col>\n                            <Col className='my-lg-0 my-2' lg='3' sm='12'>\n                              <CardText className='col-title mb-md-2 mb-0'>Total</CardText>\n                              <Input type='number' placeholder='0' value={prod[i] ? prod[i].qte * prod[i].price : 0}  />\n                            \n                            </Col>\n                          </Row>\n                        \n                        </Col>\n                      </Row>\n            </Tag>\n              )\n            }}\n          </Repeater>\n          <Row className='mt-1'>\n            <Col sm='12' className='px-0'>\n              <Button.Ripple color='primary' size='sm' className='btn-add-new' \n              onClick={() => {\n                setCount(count + 1)\n                \n                //delete data.history[0]._id\n                prod.push({})\n                //prod.total = prod.total + (prod[0].qte * prod[0].price)\n                \n              }}>\n                <Plus size={14} className='mr-25'></Plus>\n                <span className='align-middle'>ajouter un item</span>\n              </Button.Ripple>\n            </Col>\n          </Row>\n\n            </CardBody>\n            {/* /Product Details */}\n          \n\n            <hr className='invoice-spacing mt-0' />\n\n            {/* Invoice Note */}\n            <CardBody className='invoice-padding py-0'>\n              <Row>\n                <Col>\n                  <FormGroup className='mb-2'>\n                    <Label for='note' className='form-label font-weight-bold'>\n                      Note:\n                    </Label>\n                    <Input type='textarea' rows='2' id='note' defaultValue={data.note} \n                    onChange={(e) => setNote(e.target.value)} />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </CardBody>\n            {/* /Invoice Note */}\n          </Card>\n        </Col>\n        <Col xl={3} md={4} sm={12}>\n        <Fragment>\n      <Card className='invoice-action-wrapper'>\n        <CardBody>\n         \n          <Button.Ripple tag={Link} to='/orders/list' color='primary' block  className='mb-75'>\n          Retour à la liste\n          </Button.Ripple>\n          {!alertvisible ? <Button.Ripple color='success' block  className='mb-75' onClick={handleSubmit(onSubmitF)}>Sauvegarder</Button.Ripple> : ''}\n          \n        </CardBody>\n      </Card>\n      <Card className='invoice-action-wrapper'>\n      <CardBody>\n\n      <h6 className='mb-2'>Status</h6>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status1' \n                name='status' \n                label='Confirmée' \n                className='custom-control-success'\n                value={'Confirmée'}\n                defaultChecked={status === 'Confirmée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status2' \n                name='status' \n                label='Sans réponse' \n                className='custom-control-danger'\n                value={'SansRéponse'} \n                defaultChecked={status === 'Sans réponse'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status3' \n                name='status' \n                label='Reportée' \n                className='custom-control-primary'\n                value={'Reportée'}\n                defaultChecked={status === 'Reportée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status7' \n                name='status' \n                label='Injoignable' \n                className='custom-control-secondary'\n                value={'Injoignable'}\n                defaultChecked={status === 'Injoignable'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div><div>\n              <CustomInput \n                type='radio' \n                id='status4' \n                name='status' \n                label='Refusée' \n                className='custom-control-warning'\n                value={'Refusée'}\n                defaultChecked={status === 'Refusée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div><div>\n              <CustomInput \n                type='radio' \n                id='status5' \n                name='status' \n                label='Annulée' \n                className='custom-control-danger'\n                value={'Annulée'}\n                defaultChecked={status === 'Annulée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n            <div>\n              <CustomInput \n                type='radio' \n                id='status6' \n                name='status' \n                label='Livrée' \n                className='custom-control-success'\n                value={'Livrée'}\n                defaultChecked={status === 'Livrée'}\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </div>\n              \n           </CardBody>\n      </Card>\n      \n    </Fragment>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default InvoiceEditCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\nimport {getAuthToken} from '@utils'\n// ** Third Party Components\nimport axios from 'axios'\nimport { Alert, Row, Col } from 'reactstrap'\n\n// ** Invoice Edit Components\nimport EditCard from './EditCard'\nimport EditActions from './EditActions'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment'\n\nconst InvoiceEdit = (props) => {\n  // ** Vars\n  const {id } = useParams()\n  const {order} = props.location.state\n  // ** States\n  const [data, setData] = useState(null)\n  const [prd, setPrd] = useState(null)\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false)\n\n  // ** Functions to toggle add & send sidebar\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen)\n\n  // ** Get invoice on mount based on id\n  useEffect(() => {\n    console.log('order')\n    console.log(order)\n    \n    axios.get(`http://68.183.222.133:5000/products/`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('____prds___')\n      console.log(response.data)\n      setPrd(response.data)\n    })\n    /*\n    axios.get(`http://68.183.222.133:5000/orders/${id}`,\n    {\n      headers: {\n        Authorization : JSON.parse(getAuthToken())\n      }\n    }\n    ).then(response => {\n      console.log('____order___')\n      console.log(response.data)\n      setData(response.data)\n    })\n    */\n  }, [])\n\n  return order !== null && order !== undefined ? (\n          <EditCard data={order} />\n       \n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Invoice not found</h4>\n      <div className='alert-body'>\n        Invoice with id: {id} doesn't exist. Check list of all invoices: <Link to='/invoice/list'>Invoice List</Link>\n      </div>\n    </Alert>\n  )\n}\n\nexport default InvoiceEdit\n","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames({\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <ModalBody\n        className={classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        })}\n      >\n        {children}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n","// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Third Party Components\nimport { Link } from 'react-feather'\nimport { Form, FormGroup, Input, Label, Badge, Button } from 'reactstrap'\n\nconst SidebarSendInvoice = ({ open, toggleSidebar }) => {\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='Send Invoice'\n      headerClassName='mb-1'\n      contentClassName='p-0'\n      bodyClassName='pb-sm-0 pb-3'\n      toggleSidebar={toggleSidebar}\n    >\n      <Form>\n        <FormGroup>\n          <Label for='invoice-from' className='form-label'>\n            From\n          </Label>\n          <Input id='invoice-from' defaultValue='shelbyComapny@email.com' placeholder='company@email.com' />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-to' className='form-label'>\n            To\n          </Label>\n          <Input id='invoice-to' defaultValue='qConsolidated@email.com' placeholder='company@email.com' />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-subject' className='form-label'>\n            Subject\n          </Label>\n          <Input\n            id='invoice-subject'\n            defaultValue='Invoice of purchased Admin Templates'\n            placeholder='Invoice regarding goods'\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for='invoice-message' className='form-label'>\n            Message\n          </Label>\n          <Input\n            type='textarea'\n            cols='3'\n            rows='11'\n            id='invoice-message'\n            defaultValue={`Dear Queen Consolidated,\n\nThank you for your business, always a pleasure to work with you!\n\nWe have generated a new invoice in the amount of $95.59\n\nWe would appreciate payment of this invoice by 05/11/2019`}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Badge color='light-primary'>\n            <Link className='mr-50' size={14} />\n            <span className='align-middle'>Invoice Attached</span>\n          </Badge>\n        </FormGroup>\n        <FormGroup className='d-flex flex-wrap mt-2'>\n          <Button className='mr-1' color='primary' onClick={toggleSidebar}>\n            Send\n          </Button>\n          <Button color='secondary' outline onClick={toggleSidebar}>\n            Cancel\n          </Button>\n        </FormGroup>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarSendInvoice\n"],"sourceRoot":""}